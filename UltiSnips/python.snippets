global !p

from arg import Arg
import text

class PyArg(Arg):
	def __init__(self, arg):
		super(PyArg, self).__init__(arg)
		self.name = self.name.replace('*', '')

	@staticmethod
	def get_args(arglist):
		args = [PyArg(arg) for arg in arglist.split(',') if arg]
		args = [arg for arg in args if arg.name != 'self']
		return args

def write_init_body(args, snip):
	for arg in args:
		snip += 'self.' + '{0} = {0}'.format(arg.name).strip()

endglobal

snippet #! "shebang header" b
#!/usr/bin/env python
$0
endsnippet

snippet main "if main" b
if __name__ == '__main__':
	${0:${VISUAL:pass}}
endsnippet

snippet imp "import .." b
import $0
endsnippet

snippet from "from .. import .." b
from $1 import $2
endsnippet

snippet cl "class .." b
class ${1:`!p snip.rv = text.to_camel(snip.basename, True) or 'Unnamed'`}(${2:object}):
	def __init__(self$3):`!p
snip.rv = ''
snip >> 2
args = PyArg.get_args(t[3])
write_init_body(args, snip)`$0
endsnippet

snippet def "def ..(..) .." b
def $1(`!p
if snip.indent:
	snip.rv = 'self'`${2}):
	${0:${VISUAL:pass}}
endsnippet

snippet if "if .." b
if $1:
	${0:${VISUAL:pass}}
endsnippet

snippet ife "if .. else" b
if $1:
	${2:${VISUAL:pass}}
else:
	${3:pass}
endsnippet

snippet ifee "if .. elif .. else" b
if $1:
	${3:${VISUAL:pass}}
elif $2:
	${4:pass}
else:
	${5:pass}
endsnippet

snippet eli "elif .." b
elif $1:
	${2:pass}
endsnippet

snippet el "else .." b
else:
	${1:pass}
endsnippet

snippet wh "while .." b
while $1:
	${0:${VISUAL:pass}}
endsnippet

snippet For "[.. for .. in ..]"
[$1 for $2 in $3]
endsnippet

snippet for "for .." b
for $1 in $2:
	${0:${VISUAL:pass}}
endsnippet

snippet try "try .. except" b
try:
	${1:${VISUAL:pass}}
except$2:
	${5:raise}
endsnippet

snippet trye "try .. except .. else" b
try:
	${1:${VISUAL:pass}}
except$2:
	${5:raise}
else:
	${6:pass}
endsnippet

snippet tryef "try .. except .. else .. finally" b
try:
	${1:${VISUAL:pass}}
except$2:
	${5:raise}
else:
	${6:pass}
finally:
	${7:pass}
endsnippet
