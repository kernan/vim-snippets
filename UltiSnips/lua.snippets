snippet #! "shebang header" b
#!/usr/bin/env lua
$0
endsnippet

snippet req "require .." b
require $1
endsnippet

snippet lreq "local .. = require .." b
local $1 = require "$2"
endsnippet

snippet var "<varname> = <value>" b
${3:local }$1 = $2
endsnippet

snippet fun "function .. end" b
${3:local }function $1($2)
	${VISUAL}$0
end
endsnippet

snippet if "if .. end" b
if $1 then
	${VISUAL}$2
end
endsnippet

snippet ife "if .. else .. end" b
if $1 then
	${VISUAL}$2
else
	$3
end
endsnippet

snippet ifee "if .. elseif .. else .. end" b
if $1 then
	${VISUAL}$2
elseif ${3} then
	$4
else
	$5
end
endsnippet

snippet eli "elseif .." b
elseif $1 then
	$2
endsnippet

snippet el "else .." b
else
	$1
endsnippet

snippet wh "while .. do .. end" b
while $1 do
	${VISUAL}$0
end
endsnippet

snippet rep "repeat .. until .." b
repeat
	${VISUAL}$0
ultil $1
endsnippet

snippet for "for .. do .. end"
for ${1:i} = ${2:first},${3:last}${4/^..*/(?0:,:)/}${4:step} do
	${VISUAL}$0
end
endsnippet

snippet forp "for .. in pairs(..) do .. end" b
for ${1:name}, ${2:val} in pairs(${3:table_name}) do
	${VISUAL}$0
end
endsnippet

snippet fori "for .. in ipairs(..) do .. end" b
for ${1:name}, ${2:val} in ipairs(${3:table_name}) do
	${VISUAL}$0
end
endsnippet
